"""
________________________________________
|                                       |
|5                                     4|
|                                       |
|                origin                 |
|6                                     3|
|7   [|]b charge|        |r charge[|]  2|
|8                                     1|
|_______________________________________|

[|] denotes an autonomous entrance

y
|
|
|
|
z------x

      90
       |
       |
       |
180---yaw---0
       |
       |
       |
      270

up_down:z
distance:y
left_right:x

positions
*all units are CM and degrees
"""

# page 4:
# https://firstfrc.blob.core.windows.net/frc2023/FieldAssets/2023LayoutMarkingDiagram.pdf


# apriltagNumber:[x,y,z,roll]
apriltagPositions = {
    '1': [724.36, -293.84, 46.28, 180],
    '2': [724.36, -126.2, 46.28, 180],
    '3': [724.36, 41.44, 46.28, 180],
    '4': [790.88, 273.98, 69.55, 180],
    '5': [-790.8, 273.98, 69.55, 0],
    '6': [-724.26, 41.44, 46.28, 0],
    '7': [-724.26, -126.2, 46.28, 0],
    '8': [-724.26, -293.84, 46.28, 0]
}

chargePlatformEntrances = {  # TODO: add real values
    "red": [
        [0, 0],
        [0, 1]
    ],
    "blue": [
        [2, 0],
        [2, 1]
    ]
}

placementPositions={
    "red":{
        1:[0,0,0],
        2:[0,0,0],
        3:[0,0,0],
        4:[0,0,0],
        5:[0,0,0],
        6:[0,0,0],
        7:[0,0,0],
        8:[0,0,0],
        9:[0,0,0],
        10:[0,0,0],
        11:[0,0,0],
        12:[0,0,0],
        13:[0,0,0],
        14:[0,0,0],
        15:[0,0,0],
        16:[0,0,0],
        17:[0,0,0],
        18:[0,0,0],
        19:[0,0,0],
        20:[0,0,0],
        21:[0,0,0],
        22:[0,0,0],
        23:[0,0,0],
        24:[0,0,0],
        25:[0,0,0],
        26:[0,0,0],
        27:[0,0,0]
    },
    "blue":{
        1:[0,0,0],
        2:[0,0,0],
        3:[0,0,0],
        4:[0,0,0],
        5:[0,0,0],
        6:[0,0,0],
        7:[0,0,0],
        8:[0,0,0],
        9:[0,0,0],
        10:[0,0,0],
        11:[0,0,0],
        12:[0,0,0],
        13:[0,0,0],
        14:[0,0,0],
        15:[0,0,0],
        16:[0,0,0],
        17:[0,0,0],
        18:[0,0,0],
        19:[0,0,0],
        20:[0,0,0],
        21:[0,0,0],
        22:[0,0,0],
        23:[0,0,0],
        24:[0,0,0],
        25:[0,0,0],
        26:[0,0,0],
        27:[0,0,0]
    }
}

def getClosestPlacement(pos, alliance):
    closest=[None, 100000000]
    for i in placementPositions[alliance]:
        error=(pos[0]-i[0])**2+(pos[1]-i[1])**2
        if closest[1]>error:
            closest=[error,placementPositions[i]]
    return
